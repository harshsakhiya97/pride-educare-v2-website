import React, { useEffect, useState, useContext } from "react";
import { Link } from "react-router-dom";
import DashboardNavbar from "../components/DashboardNavbar";
import { AuthContext } from "../context/AuthContext";
import userSvg from "../assets/user.svg";
import axios from "../helper/axios";
import Modal from "react-bootstrap/Modal";

const MyProfile = () => {
  const [userData, setUserData] = useState([]);
  const { token } = useContext(AuthContext);
  const [prefix, setPrefix] = useState("");
  const [gender, setGender] = useState("");
  const [maritalStatus, setMaritalStatus] = useState("");
  const [prefixList, setPrefixList] = useState([]);
  const [genderList, setGenderList] = useState([]);
  const [maritalStatusList, setMaritalStatusList] = useState([]);
  const [firstName, setFirstName] = useState(userData.firstName);
  const [lastName, setLastName] = useState(userData.lastName);
  const [dob, setDob] = useState(userData.dob);
  const [address, setAddress] = useState(userData.address);
  const [qualification, setQualification] = useState(userData.qualification);
  const [nameOnCertificate, setNameOnCertificate] = useState(
    userData.nameOnCertificate
  );
  const [panNumber, setPanNumber] = useState(userData.panNumber);
  const [aadharNumber, setAadharNumber] = useState(userData.aadharNumber);
  const [gstNumber, setGstNumber] = useState(userData.gstNumber);
  const [gstCompanyName, setGstCompanyName] = useState(userData.gstCompanyName);
  const [email, setEmail] = useState(userData.user?.email);

  const [isActive, setIsActive] = useState(false);

  const handleClick = () => {
    setIsActive(!isActive);
    fetchPrefix();
    fetchGender();
    fetchMaritalStatus();
  };

  useEffect(() => {
    fetchUserData();
  }, []);

  const fetchPrefix = async () => {
    try {
      const res = await axios.get("predefined/list/PREFIX", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      setPrefixList(res.data.data.list);
    } catch (error) {
      console.error("Error Fetching Prefix", error);
    }
  };

  const handleChange = (event, field) => {
    const selectedValue = event.target.value;
    if (field === "prefix") {
      setPrefix(selectedValue);
    } else if (field === "gender") {
      setGender(selectedValue);
    } else if (field === "maritalStatus") {
      setMaritalStatus(selectedValue);
    }
  };

  const fetchGender = async () => {
    try {
      const res = await axios.get("predefined/list/GENDER", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      setGenderList(res.data.data.list);
    } catch (error) {
      console.error("Error Fetching Prefix", error);
    }
  };

  const fetchMaritalStatus = async () => {
    try {
      const res = await axios.get("predefined/list/MARITAL_STATUS", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      setMaritalStatusList(res.data.data.list);
    } catch (error) {
      console.error("Error Fetching Prefix", error);
    }
  };

  const fetchUserData = async () => {
    try {
      const res = await axios.get("student/details", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      setUserData(res.data.data);
    } catch (err) {
      console.error("Error Fetching User Data", err);
    }
  };

  const handleProfileSubmit = async (e) => {
    e.preventDefault();
    try {
      const details = {
        prefix: prefix,
        firstName: firstName,
        lastName: lastName,
        gender: gender,
        maritalStatus: maritalStatus,
        dob: dob,
        address: address,
        qualification: qualification,
        nameOnCertificate: nameOnCertificate,
        panNumber: panNumber,
        aadharNumber: aadharNumber,
        gstNumber: gstNumber,
        gstCompanyName: gstCompanyName,
        email: email,
      };
      const formData = new FormData();
      formData.append("profilePic", e.target.profilePic.files[0]);
      formData.append("details", JSON.stringify(details));

      await axios.put("student/update", formData, {
        headers: {
          Authorization: `Bearer ${token}`,
          "Content-Type": "multipart/form-data",
        },
      });
      fetchUserData();
      setIsActive(false);
    } catch (err) {
      console.error("Error Posting User Data", err);
    }
  };

  const [isError, setError] = useState("");
  const [showSuccessModal, setShowSuccessModal] = useState(false);
  const [showFailureModal, setShowFailureModal] = useState(false);
  const [showPaymentModal, setShowPaymentModal] = useState(false);
  const [balance, setBalance] = useState(0);

  let orderId;
  let paymentWindow;

  const handlePayBalance = async (e) => {
    e.preventDefault();
    if (balance > userData?.balance) {
      setError("Amount is More Than Required");
      console.log("Amount is More Than Required");
      // alert("Amount is More Than Required");
      return;
    }
    if (balance == 0 || balance === null || balance === undefined) {
      setError("0 Not Allowed");
      console.log("0 Not Allowed");
      // alert("0 Not Allowed");
      return;
    }
    // console.log("Pay", parseInt(balance));

    if (!token) {
      navigate("/login");
    } else {
      setError("");
      try {
        const response = await axios.post(
          "receipt/payBalance",
          {
            amount: balance,
          },
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );

        const { paymentUrl } = response.data.data;
        orderId = response.data.data.orderId;
        // console.log("responseData", response.data.data);

        paymentWindow = window.open(
          paymentUrl,
          "Payment Window",
          "width=1000,height=1000"
        );

        const checkPaymentStatus = async () => {
          try {
            const checkStatusResponse = await axios.post(
              "payment/paymentStatus",
              {
                orderId: orderId,
              },
              {
                headers: {
                  Authorization: `Bearer ${token}`,
                },
              }
            );

            const { orderStatus } = checkStatusResponse.data.data;
            // console.log("orderstatus", checkStatusResponse.data.data);

            // console.log("orderStatus & id", orderStatus, orderId);

            if (orderStatus === "SUCCESS") {
              console.log("Payment Success");
              setShowSuccessModal(true);
              setShowPaymentModal(false);
              if (showFailureModal) {
                setShowFailureModal(false);
              }
            } else if (orderStatus === "FAILED") {
              console.log("Payment failed");
              setShowFailureModal(true);
              setShowPaymentModal(false);
            } else if (orderStatus === "ACTIVE") {
              console.log("Payment Active");
              setShowPaymentModal(false);
            }
            fetchUserData();
          } catch (error) {
            console.error("Error checking payment status", error);
          }
        };

        const checkWindowStatus = setInterval(() => {
          if (paymentWindow.closed) {
            clearInterval(checkWindowStatus);
            checkPaymentStatus();
          }
        }, 1000);
      } catch (error) {
        console.error("Error In Payment", error);
        setShowFailureModal(true);
        setShowPaymentModal(false);
      }
    }
  };

  const formatDate = (inputDate) => {
    const date = new Date(inputDate);
    const day = date.getDate();
    const month = date.toLocaleString("default", { month: "short" });
    const year = date.getFullYear();

    return `${day} ${month}, ${year}`;
  };

  return (
    <>
      <DashboardNavbar />

      <section className="my-profile-section py-5 my-4 user-select-none">
        <div className="container">
          <div className="row">
            <div className="col-4">
              <div className="text-center">
                {userData?.user?.profilePicture?.filePath ? (
                  <img
                    src={userData?.user?.profilePicture?.filePath}
                    width="60%"
                    height="auto"
                    style={{ borderRadius: "50%" }}
                  />
                ) : (
                  <img
                    src={userSvg}
                    width="60%"
                    height="auto"
                    style={{ borderRadius: "50%" }}
                  />
                )}
                <h5 className="text-center mt-4">
                  {userData.prefix}. {userData?.name}
                </h5>
                <h4 className="text-center">+91 {userData?.user?.phone}</h4>

                <form onSubmit={handleProfileSubmit}>
                  <input
                    type="file"
                    id="profilePic"
                    name="profilePic"
                    accept="image/*"
                    className="ms-5 ps-5"
                    placeholder="Select Image"
                  />
                  <button className="btn btn-primary mt-3" type="submit">
                    Update Profile
                  </button>
                </form>
              </div>
            </div>
            <div className="col-8">
              {/* <form className="form"> */}
              {/* <div className="flex-box"> */}
              <div className="d-flex align-items-center justify-content-end">
                Edit Profile{" "}
                <svg
                  onClick={() => handleClick()}
                  xmlns="http://www.w3.org/2000/svg"
                  width="50"
                  height="50"
                  viewBox="0 0 51 51"
                  fill="none"
                  className="edit-icon"
                >
                  <rect
                    width="51"
                    height="51"
                    rx="25.5"
                    fill="#D9D9D9"
                    fillOpacity="0.4"
                  />
                  <g opacity="0.2">
                    <path
                      d="M27.4386 15.8767L16.6752 27.2693C16.2688 27.702 15.8755 28.5541 15.7969 29.1441L16.2936 31.9911C16.1231 33.525 15.9792 33.7622 17.5 33.5L20.9848 31.9911C21.5747 31.8862 22.4007 31.4536 22.8071 31.0079L33.5704 19.6153C35.432 17.6488 37.2711 16.4069 34.3738 13.667C31.4896 10.9532 29.3002 13.9102 27.4386 15.8767Z"
                      stroke="#292D32"
                      strokeWidth="2"
                      strokeMiterlimit="10"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M26.5 17.0015C27.0637 20.6198 27.8554 21.6345 31.5 22.0015"
                      stroke="#292D32"
                      strokeWidth="2"
                      strokeMiterlimit="10"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M13.9883 37.9985H37.5862"
                      stroke="#292D32"
                      strokeWidth="2"
                      strokeMiterlimit="10"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </g>
                </svg>
              </div>
              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="37"
                    height="51"
                    viewBox="0 0 37 51"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M18.5 23.05C16.4233 23.05 14.3932 22.4034 12.6665 21.192C10.9398 19.9805 9.59398 18.2586 8.79926 16.2441C8.00454 14.2295 7.79661 12.0128 8.20175 9.87413C8.6069 7.73549 9.60693 5.77103 11.0754 4.22915C12.5438 2.68728 14.4148 1.63725 16.4516 1.21185C18.4884 0.786445 20.5996 1.00478 22.5182 1.83923C24.4368 2.67369 26.0767 4.08679 27.2304 5.89984C28.3842 7.71289 29 9.84447 29 12.025C29 14.949 27.8938 17.7533 25.9246 19.8209C23.9555 21.8884 21.2848 23.05 18.5 23.05ZM18.5 5.9C17.3463 5.9 16.2185 6.25923 15.2592 6.93225C14.2999 7.60528 13.5522 8.56187 13.1107 9.68107C12.6692 10.8003 12.5537 12.0318 12.7788 13.2199C13.0038 14.4081 13.5594 15.4994 14.3752 16.356C15.191 17.2126 16.2304 17.796 17.362 18.0323C18.4935 18.2686 19.6664 18.1474 20.7323 17.6838C21.7982 17.2202 22.7093 16.4351 23.3502 15.4279C23.9912 14.4206 24.3333 13.2364 24.3333 12.025C24.3333 10.4006 23.7188 8.84264 22.6248 7.69397C21.5308 6.54531 20.0471 5.9 18.5 5.9ZM36 47.55V46.325C36 41.4516 34.1563 36.7779 30.8744 33.3319C27.5925 29.8859 23.1413 27.95 18.5 27.95C13.8587 27.95 9.40752 29.8859 6.12563 33.3319C2.84374 36.7779 1 41.4516 1 46.325L1 47.55C1 48.1998 1.24583 48.8229 1.68342 49.2824C2.121 49.7419 2.71449 50 3.33333 50C3.95217 50 4.54566 49.7419 4.98325 49.2824C5.42083 48.8229 5.66667 48.1998 5.66667 47.55V46.325C5.66667 42.7512 7.01875 39.3238 9.42546 36.7967C11.8322 34.2697 15.0964 32.85 18.5 32.85C21.9036 32.85 25.1678 34.2697 27.5745 36.7967C29.9813 39.3238 31.3333 42.7512 31.3333 46.325V47.55C31.3333 48.1998 31.5792 48.8229 32.0168 49.2824C32.4543 49.7419 33.0478 50 33.6667 50C34.2855 50 34.879 49.7419 35.3166 49.2824C35.7542 48.8229 36 48.1998 36 47.55Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.8"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Prefix</span>
                    {!isActive ? (
                      <h4>
                        {userData.prefix === null
                          ? "Not Available"
                          : userData.prefix}
                      </h4>
                    ) : (
                      <select
                        value={prefix}
                        onChange={(e) => handleChange(e, "prefix")}
                        defaultValue={prefix}
                        className="form-control"
                        name="prefix"
                        id="prefix"
                      >
                        <option value="">Select</option>
                        {prefixList?.map((prefix) => (
                          <>
                            <option key={prefix.value} value={prefix.value}>
                              {prefix.name}
                            </option>
                          </>
                        ))}
                      </select>
                    )}
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="37"
                    height="51"
                    viewBox="0 0 37 51"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M18.5 23.05C16.4233 23.05 14.3932 22.4034 12.6665 21.192C10.9398 19.9805 9.59398 18.2586 8.79926 16.2441C8.00454 14.2295 7.79661 12.0128 8.20175 9.87413C8.6069 7.73549 9.60693 5.77103 11.0754 4.22915C12.5438 2.68728 14.4148 1.63725 16.4516 1.21185C18.4884 0.786445 20.5996 1.00478 22.5182 1.83923C24.4368 2.67369 26.0767 4.08679 27.2304 5.89984C28.3842 7.71289 29 9.84447 29 12.025C29 14.949 27.8938 17.7533 25.9246 19.8209C23.9555 21.8884 21.2848 23.05 18.5 23.05ZM18.5 5.9C17.3463 5.9 16.2185 6.25923 15.2592 6.93225C14.2999 7.60528 13.5522 8.56187 13.1107 9.68107C12.6692 10.8003 12.5537 12.0318 12.7788 13.2199C13.0038 14.4081 13.5594 15.4994 14.3752 16.356C15.191 17.2126 16.2304 17.796 17.362 18.0323C18.4935 18.2686 19.6664 18.1474 20.7323 17.6838C21.7982 17.2202 22.7093 16.4351 23.3502 15.4279C23.9912 14.4206 24.3333 13.2364 24.3333 12.025C24.3333 10.4006 23.7188 8.84264 22.6248 7.69397C21.5308 6.54531 20.0471 5.9 18.5 5.9ZM36 47.55V46.325C36 41.4516 34.1563 36.7779 30.8744 33.3319C27.5925 29.8859 23.1413 27.95 18.5 27.95C13.8587 27.95 9.40752 29.8859 6.12563 33.3319C2.84374 36.7779 1 41.4516 1 46.325L1 47.55C1 48.1998 1.24583 48.8229 1.68342 49.2824C2.121 49.7419 2.71449 50 3.33333 50C3.95217 50 4.54566 49.7419 4.98325 49.2824C5.42083 48.8229 5.66667 48.1998 5.66667 47.55V46.325C5.66667 42.7512 7.01875 39.3238 9.42546 36.7967C11.8322 34.2697 15.0964 32.85 18.5 32.85C21.9036 32.85 25.1678 34.2697 27.5745 36.7967C29.9813 39.3238 31.3333 42.7512 31.3333 46.325V47.55C31.3333 48.1998 31.5792 48.8229 32.0168 49.2824C32.4543 49.7419 33.0478 50 33.6667 50C34.2855 50 34.879 49.7419 35.3166 49.2824C35.7542 48.8229 36 48.1998 36 47.55Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.8"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>First Name</span>
                    {!isActive ? (
                      <h4>
                        {userData.firstName == null
                          ? "Not Available"
                          : userData.firstName}
                      </h4>
                    ) : (
                      <input
                        value={firstName}
                        onChange={(e) => setFirstName(e.target.value)}
                        defaultValue={userData.firstName}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="37"
                    height="51"
                    viewBox="0 0 37 51"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M18.5 23.05C16.4233 23.05 14.3932 22.4034 12.6665 21.192C10.9398 19.9805 9.59398 18.2586 8.79926 16.2441C8.00454 14.2295 7.79661 12.0128 8.20175 9.87413C8.6069 7.73549 9.60693 5.77103 11.0754 4.22915C12.5438 2.68728 14.4148 1.63725 16.4516 1.21185C18.4884 0.786445 20.5996 1.00478 22.5182 1.83923C24.4368 2.67369 26.0767 4.08679 27.2304 5.89984C28.3842 7.71289 29 9.84447 29 12.025C29 14.949 27.8938 17.7533 25.9246 19.8209C23.9555 21.8884 21.2848 23.05 18.5 23.05ZM18.5 5.9C17.3463 5.9 16.2185 6.25923 15.2592 6.93225C14.2999 7.60528 13.5522 8.56187 13.1107 9.68107C12.6692 10.8003 12.5537 12.0318 12.7788 13.2199C13.0038 14.4081 13.5594 15.4994 14.3752 16.356C15.191 17.2126 16.2304 17.796 17.362 18.0323C18.4935 18.2686 19.6664 18.1474 20.7323 17.6838C21.7982 17.2202 22.7093 16.4351 23.3502 15.4279C23.9912 14.4206 24.3333 13.2364 24.3333 12.025C24.3333 10.4006 23.7188 8.84264 22.6248 7.69397C21.5308 6.54531 20.0471 5.9 18.5 5.9ZM36 47.55V46.325C36 41.4516 34.1563 36.7779 30.8744 33.3319C27.5925 29.8859 23.1413 27.95 18.5 27.95C13.8587 27.95 9.40752 29.8859 6.12563 33.3319C2.84374 36.7779 1 41.4516 1 46.325L1 47.55C1 48.1998 1.24583 48.8229 1.68342 49.2824C2.121 49.7419 2.71449 50 3.33333 50C3.95217 50 4.54566 49.7419 4.98325 49.2824C5.42083 48.8229 5.66667 48.1998 5.66667 47.55V46.325C5.66667 42.7512 7.01875 39.3238 9.42546 36.7967C11.8322 34.2697 15.0964 32.85 18.5 32.85C21.9036 32.85 25.1678 34.2697 27.5745 36.7967C29.9813 39.3238 31.3333 42.7512 31.3333 46.325V47.55C31.3333 48.1998 31.5792 48.8229 32.0168 49.2824C32.4543 49.7419 33.0478 50 33.6667 50C34.2855 50 34.879 49.7419 35.3166 49.2824C35.7542 48.8229 36 48.1998 36 47.55Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.8"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Last Name</span>
                    {!isActive ? (
                      <h4>
                        {userData.lastName == null
                          ? "Not Available"
                          : userData.lastName}
                      </h4>
                    ) : (
                      <input
                        value={lastName}
                        onChange={(e) => setLastName(e.target.value)}
                        defaultValue={userData.lastName}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
              </div>
              {/* </div> */}
              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 me-0 col me-3">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="54"
                    height="54"
                    viewBox="0 0 54 54"
                    fill="none"
                  >
                    <path
                      d="M10.86 23.37C15.18 31.86 22.14 38.79 30.63 43.14L37.23 36.54C38.04 35.73 39.24 35.46 40.29 35.82C43.65 36.93 47.28 37.53 51 37.53C52.65 37.53 54 38.88 54 40.53V51C54 52.65 52.65 54 51 54C22.83 54 0 31.17 0 3C0 1.35 1.35 0 3 0H13.5C15.15 0 16.5 1.35 16.5 3C16.5 6.75 17.1 10.35 18.21 13.71C18.54 14.76 18.3 15.93 17.46 16.77L10.86 23.37Z"
                      fill="#6A97CF"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Phone</span>
                    <h4>
                      +91{" "}
                      {userData.user?.phone == null
                        ? "Not Available"
                        : userData.user?.phone}
                    </h4>
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 me-0 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="46"
                    height="38"
                    viewBox="0 0 46 38"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M35.8333 1.00801H10.1667C7.8489 0.91004 5.58548 1.71423 3.86881 3.24564C2.15213 4.77704 1.1211 6.91175 1 9.18537L1 28.8146C1.1211 31.0882 2.15213 33.223 3.86881 34.7544C5.58548 36.2858 7.8489 37.09 10.1667 36.992H35.8333C38.1511 37.09 40.4145 36.2858 42.1312 34.7544C43.8479 33.223 44.8789 31.0882 45 28.8146V9.18537C44.8789 6.91175 43.8479 4.77704 42.1312 3.24564C40.4145 1.71423 38.1511 0.91004 35.8333 1.00801ZM10.1667 4.27895H35.8333C36.8953 4.25775 37.9409 4.53757 38.8449 5.08486C39.7489 5.63215 40.4728 6.42368 40.93 7.36458L26.8903 19.8996C25.8131 20.8238 24.4308 21.3332 23 21.3332C21.5692 21.3332 20.1869 20.8238 19.1097 19.8996L5.07 7.36638C5.52689 6.42515 6.25074 5.63324 7.15475 5.08562C8.05875 4.53799 9.10453 4.25791 10.1667 4.27895ZM35.8333 33.721H10.1667C8.77513 33.7832 7.41518 33.3018 6.38442 32.3823C5.35365 31.4628 4.73602 30.18 4.66667 28.8146V11.6395L16.5173 22.2062C18.3116 23.7478 20.6152 24.5976 23 24.5976C25.3848 24.5976 27.6884 23.7478 29.4827 22.2062L41.3333 11.6395V28.8128C41.2645 30.1785 40.647 31.4617 39.6162 32.3816C38.5854 33.3015 37.2252 33.7832 35.8333 33.721Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.5"
                    />
                  </svg>

                  <div className="user-form-data pe-2">
                    <span>Email</span>
                    {!isActive ? (
                      <h4>
                        {userData.user?.email == null
                          ? "Not Available"
                          : userData.user?.email}
                      </h4>
                    ) : (
                      <input
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        defaultValue={userData.user?.email}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
              </div>

              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 col-12">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="54"
                    height="54"
                    viewBox="0 0 54 54"
                    fill="none"
                    className="form-icon"
                  >
                    <mask
                      id="path-1-outside-1_727_18145"
                      maskUnits="userSpaceOnUse"
                      x="0"
                      y="0"
                      width="54"
                      height="54"
                      fill="black"
                    >
                      <rect fill="white" width="54" height="54" />
                      <path d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z" />
                    </mask>
                    <path
                      d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z"
                      fill="#6A97CF"
                    />
                    <path
                      d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z"
                      stroke="#6A97CF"
                      strokeWidth="0.4"
                      mask="url(#path-1-outside-1_727_18145)"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Address</span>
                    {!isActive ? (
                      <h4>
                        {userData.address == null
                          ? "Not Available"
                          : userData.address}
                      </h4>
                    ) : (
                      <input
                        value={address}
                        onChange={(e) => setAddress(e.target.value)}
                        defaultValue={userData.address}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
              </div>

              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="38"
                    height="40"
                    viewBox="0 0 38 40"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M19 22H29.5556V32H19V22ZM33.7778 4H31.6667V0H27.4444V4H10.5556V0H6.33333V4H4.22222C1.9 4 0 5.8 0 8V36C0 38.2 1.9 40 4.22222 40H33.7778C36.1 40 38 38.2 38 36V8C38 5.8 36.1 4 33.7778 4ZM33.7778 8V12H4.22222V8H33.7778ZM4.22222 36V16H33.7778V36H4.22222Z"
                      fill="#6A97CF"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>DOB</span>
                    {!isActive ? (
                      // <h4>{Date(userData?.dob)?.toString().slice(3, 15)}</h4>
                      <h4>{formatDate(userData?.dob)}</h4>
                    ) : (
                      <input
                        value={dob}
                        onChange={(e) => setDob(e.target.value)}
                        type="date"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                        style={{ width: "100%" }}
                      />
                    )}
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="37"
                    height="51"
                    viewBox="0 0 37 51"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M18.5 23.05C16.4233 23.05 14.3932 22.4034 12.6665 21.192C10.9398 19.9805 9.59398 18.2586 8.79926 16.2441C8.00454 14.2295 7.79661 12.0128 8.20175 9.87413C8.6069 7.73549 9.60693 5.77103 11.0754 4.22915C12.5438 2.68728 14.4148 1.63725 16.4516 1.21185C18.4884 0.786445 20.5996 1.00478 22.5182 1.83923C24.4368 2.67369 26.0767 4.08679 27.2304 5.89984C28.3842 7.71289 29 9.84447 29 12.025C29 14.949 27.8938 17.7533 25.9246 19.8209C23.9555 21.8884 21.2848 23.05 18.5 23.05ZM18.5 5.9C17.3463 5.9 16.2185 6.25923 15.2592 6.93225C14.2999 7.60528 13.5522 8.56187 13.1107 9.68107C12.6692 10.8003 12.5537 12.0318 12.7788 13.2199C13.0038 14.4081 13.5594 15.4994 14.3752 16.356C15.191 17.2126 16.2304 17.796 17.362 18.0323C18.4935 18.2686 19.6664 18.1474 20.7323 17.6838C21.7982 17.2202 22.7093 16.4351 23.3502 15.4279C23.9912 14.4206 24.3333 13.2364 24.3333 12.025C24.3333 10.4006 23.7188 8.84264 22.6248 7.69397C21.5308 6.54531 20.0471 5.9 18.5 5.9ZM36 47.55V46.325C36 41.4516 34.1563 36.7779 30.8744 33.3319C27.5925 29.8859 23.1413 27.95 18.5 27.95C13.8587 27.95 9.40752 29.8859 6.12563 33.3319C2.84374 36.7779 1 41.4516 1 46.325L1 47.55C1 48.1998 1.24583 48.8229 1.68342 49.2824C2.121 49.7419 2.71449 50 3.33333 50C3.95217 50 4.54566 49.7419 4.98325 49.2824C5.42083 48.8229 5.66667 48.1998 5.66667 47.55V46.325C5.66667 42.7512 7.01875 39.3238 9.42546 36.7967C11.8322 34.2697 15.0964 32.85 18.5 32.85C21.9036 32.85 25.1678 34.2697 27.5745 36.7967C29.9813 39.3238 31.3333 42.7512 31.3333 46.325V47.55C31.3333 48.1998 31.5792 48.8229 32.0168 49.2824C32.4543 49.7419 33.0478 50 33.6667 50C34.2855 50 34.879 49.7419 35.3166 49.2824C35.7542 48.8229 36 48.1998 36 47.55Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.8"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Aadhar Number</span>
                    {!isActive ? (
                      <h4>
                        {userData.aadharNumber == null
                          ? "Not Available"
                          : userData.aadharNumber}
                      </h4>
                    ) : (
                      <input
                        value={aadharNumber}
                        onChange={(e) => setAadharNumber(e.target.value)}
                        defaultValue={userData.aadharNumber}
                        type="text"
                        maxLength={12}
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="37"
                    height="51"
                    viewBox="0 0 37 51"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M18.5 23.05C16.4233 23.05 14.3932 22.4034 12.6665 21.192C10.9398 19.9805 9.59398 18.2586 8.79926 16.2441C8.00454 14.2295 7.79661 12.0128 8.20175 9.87413C8.6069 7.73549 9.60693 5.77103 11.0754 4.22915C12.5438 2.68728 14.4148 1.63725 16.4516 1.21185C18.4884 0.786445 20.5996 1.00478 22.5182 1.83923C24.4368 2.67369 26.0767 4.08679 27.2304 5.89984C28.3842 7.71289 29 9.84447 29 12.025C29 14.949 27.8938 17.7533 25.9246 19.8209C23.9555 21.8884 21.2848 23.05 18.5 23.05ZM18.5 5.9C17.3463 5.9 16.2185 6.25923 15.2592 6.93225C14.2999 7.60528 13.5522 8.56187 13.1107 9.68107C12.6692 10.8003 12.5537 12.0318 12.7788 13.2199C13.0038 14.4081 13.5594 15.4994 14.3752 16.356C15.191 17.2126 16.2304 17.796 17.362 18.0323C18.4935 18.2686 19.6664 18.1474 20.7323 17.6838C21.7982 17.2202 22.7093 16.4351 23.3502 15.4279C23.9912 14.4206 24.3333 13.2364 24.3333 12.025C24.3333 10.4006 23.7188 8.84264 22.6248 7.69397C21.5308 6.54531 20.0471 5.9 18.5 5.9ZM36 47.55V46.325C36 41.4516 34.1563 36.7779 30.8744 33.3319C27.5925 29.8859 23.1413 27.95 18.5 27.95C13.8587 27.95 9.40752 29.8859 6.12563 33.3319C2.84374 36.7779 1 41.4516 1 46.325L1 47.55C1 48.1998 1.24583 48.8229 1.68342 49.2824C2.121 49.7419 2.71449 50 3.33333 50C3.95217 50 4.54566 49.7419 4.98325 49.2824C5.42083 48.8229 5.66667 48.1998 5.66667 47.55V46.325C5.66667 42.7512 7.01875 39.3238 9.42546 36.7967C11.8322 34.2697 15.0964 32.85 18.5 32.85C21.9036 32.85 25.1678 34.2697 27.5745 36.7967C29.9813 39.3238 31.3333 42.7512 31.3333 46.325V47.55C31.3333 48.1998 31.5792 48.8229 32.0168 49.2824C32.4543 49.7419 33.0478 50 33.6667 50C34.2855 50 34.879 49.7419 35.3166 49.2824C35.7542 48.8229 36 48.1998 36 47.55Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.8"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>PAN</span>
                    {!isActive ? (
                      <h4>
                        {userData.panNumber == null
                          ? "Not Available"
                          : userData.panNumber}
                      </h4>
                    ) : (
                      <input
                        value={panNumber}
                        onChange={(e) => setPanNumber(e.target.value)}
                        defaultValue={userData.panNumber}
                        type="text"
                        maxLength={10}
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
              </div>

              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="37"
                    height="51"
                    viewBox="0 0 37 51"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M18.5 23.05C16.4233 23.05 14.3932 22.4034 12.6665 21.192C10.9398 19.9805 9.59398 18.2586 8.79926 16.2441C8.00454 14.2295 7.79661 12.0128 8.20175 9.87413C8.6069 7.73549 9.60693 5.77103 11.0754 4.22915C12.5438 2.68728 14.4148 1.63725 16.4516 1.21185C18.4884 0.786445 20.5996 1.00478 22.5182 1.83923C24.4368 2.67369 26.0767 4.08679 27.2304 5.89984C28.3842 7.71289 29 9.84447 29 12.025C29 14.949 27.8938 17.7533 25.9246 19.8209C23.9555 21.8884 21.2848 23.05 18.5 23.05ZM18.5 5.9C17.3463 5.9 16.2185 6.25923 15.2592 6.93225C14.2999 7.60528 13.5522 8.56187 13.1107 9.68107C12.6692 10.8003 12.5537 12.0318 12.7788 13.2199C13.0038 14.4081 13.5594 15.4994 14.3752 16.356C15.191 17.2126 16.2304 17.796 17.362 18.0323C18.4935 18.2686 19.6664 18.1474 20.7323 17.6838C21.7982 17.2202 22.7093 16.4351 23.3502 15.4279C23.9912 14.4206 24.3333 13.2364 24.3333 12.025C24.3333 10.4006 23.7188 8.84264 22.6248 7.69397C21.5308 6.54531 20.0471 5.9 18.5 5.9ZM36 47.55V46.325C36 41.4516 34.1563 36.7779 30.8744 33.3319C27.5925 29.8859 23.1413 27.95 18.5 27.95C13.8587 27.95 9.40752 29.8859 6.12563 33.3319C2.84374 36.7779 1 41.4516 1 46.325L1 47.55C1 48.1998 1.24583 48.8229 1.68342 49.2824C2.121 49.7419 2.71449 50 3.33333 50C3.95217 50 4.54566 49.7419 4.98325 49.2824C5.42083 48.8229 5.66667 48.1998 5.66667 47.55V46.325C5.66667 42.7512 7.01875 39.3238 9.42546 36.7967C11.8322 34.2697 15.0964 32.85 18.5 32.85C21.9036 32.85 25.1678 34.2697 27.5745 36.7967C29.9813 39.3238 31.3333 42.7512 31.3333 46.325V47.55C31.3333 48.1998 31.5792 48.8229 32.0168 49.2824C32.4543 49.7419 33.0478 50 33.6667 50C34.2855 50 34.879 49.7419 35.3166 49.2824C35.7542 48.8229 36 48.1998 36 47.55Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.8"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Gender</span>
                    {!isActive ? (
                      <h4>
                        {userData.gender == null
                          ? "Not Available"
                          : userData.gender}
                      </h4>
                    ) : (
                      <select
                        value={gender}
                        onChange={(e) => handleChange(e, "gender")}
                        className="form-control"
                        name="gender"
                        id="gender"
                      >
                        <option value="">Select</option>
                        {genderList.map((option) => (
                          <option key={option.value} value={option.value}>
                            {option.name}
                          </option>
                        ))}
                      </select>
                    )}
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="37"
                    height="51"
                    viewBox="0 0 37 51"
                    fill="none"
                    className="form-icon"
                  >
                    <path
                      d="M18.5 23.05C16.4233 23.05 14.3932 22.4034 12.6665 21.192C10.9398 19.9805 9.59398 18.2586 8.79926 16.2441C8.00454 14.2295 7.79661 12.0128 8.20175 9.87413C8.6069 7.73549 9.60693 5.77103 11.0754 4.22915C12.5438 2.68728 14.4148 1.63725 16.4516 1.21185C18.4884 0.786445 20.5996 1.00478 22.5182 1.83923C24.4368 2.67369 26.0767 4.08679 27.2304 5.89984C28.3842 7.71289 29 9.84447 29 12.025C29 14.949 27.8938 17.7533 25.9246 19.8209C23.9555 21.8884 21.2848 23.05 18.5 23.05ZM18.5 5.9C17.3463 5.9 16.2185 6.25923 15.2592 6.93225C14.2999 7.60528 13.5522 8.56187 13.1107 9.68107C12.6692 10.8003 12.5537 12.0318 12.7788 13.2199C13.0038 14.4081 13.5594 15.4994 14.3752 16.356C15.191 17.2126 16.2304 17.796 17.362 18.0323C18.4935 18.2686 19.6664 18.1474 20.7323 17.6838C21.7982 17.2202 22.7093 16.4351 23.3502 15.4279C23.9912 14.4206 24.3333 13.2364 24.3333 12.025C24.3333 10.4006 23.7188 8.84264 22.6248 7.69397C21.5308 6.54531 20.0471 5.9 18.5 5.9ZM36 47.55V46.325C36 41.4516 34.1563 36.7779 30.8744 33.3319C27.5925 29.8859 23.1413 27.95 18.5 27.95C13.8587 27.95 9.40752 29.8859 6.12563 33.3319C2.84374 36.7779 1 41.4516 1 46.325L1 47.55C1 48.1998 1.24583 48.8229 1.68342 49.2824C2.121 49.7419 2.71449 50 3.33333 50C3.95217 50 4.54566 49.7419 4.98325 49.2824C5.42083 48.8229 5.66667 48.1998 5.66667 47.55V46.325C5.66667 42.7512 7.01875 39.3238 9.42546 36.7967C11.8322 34.2697 15.0964 32.85 18.5 32.85C21.9036 32.85 25.1678 34.2697 27.5745 36.7967C29.9813 39.3238 31.3333 42.7512 31.3333 46.325V47.55C31.3333 48.1998 31.5792 48.8229 32.0168 49.2824C32.4543 49.7419 33.0478 50 33.6667 50C34.2855 50 34.879 49.7419 35.3166 49.2824C35.7542 48.8229 36 48.1998 36 47.55Z"
                      fill="#6A97CF"
                      stroke="#6A97CF"
                      strokeWidth="0.8"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Marital Status</span>
                    {!isActive ? (
                      <h4>
                        {userData.maritalStatus == null
                          ? "Not Available"
                          : userData.maritalStatus}
                      </h4>
                    ) : (
                      <select
                        value={maritalStatus}
                        onChange={(e) => handleChange(e, "maritalStatus")}
                        className="form-control"
                        name="maritalStatus"
                        id="maritalStatus"
                      >
                        <option value="">Select</option>
                        {maritalStatusList.map((option) => (
                          <option key={option.value} value={option.value}>
                            {option.name}
                          </option>
                        ))}
                      </select>
                    )}
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="66"
                    height="46"
                    viewBox="0 0 66 46"
                    fill="none"
                  >
                    <path
                      d="M33 0L0 12.3393L33 28.7913L48.7175 20.9554L33.9727 16.4605C33.6691 16.6056 33.3367 16.6814 33 16.6821C32.4003 16.6821 31.8252 16.4446 31.4012 16.0218C30.9771 15.599 30.7389 15.0255 30.7389 14.4276C30.7389 13.8296 30.9771 13.2562 31.4012 12.8334C31.8252 12.4106 32.4003 12.173 33 12.173L32.6261 13.3851L35.2457 14.1887C35.2461 14.1914 35.2465 14.194 35.2468 14.1966L39.1125 15.3753L61.1225 22.1275V23.839C60.8181 24.0455 60.5688 24.323 60.3964 24.6474C60.224 24.9718 60.1337 25.3332 60.1333 25.7004C60.1337 26.0759 60.2282 26.4454 60.4082 26.7753C60.5881 27.1052 60.8479 27.385 61.1639 27.5894C60.1347 31.4679 60.1333 40.2677 60.1333 43.7365C62.3944 45.2012 62.3944 45.2547 64.6555 43.7365C64.6555 40.2681 64.6544 31.47 63.6253 27.5906C63.9414 27.3861 64.2012 27.106 64.3811 26.7759C64.5611 26.4457 64.6554 26.076 64.6555 25.7002C64.6554 25.3327 64.5653 24.9707 64.3929 24.6459C64.2205 24.3211 63.971 24.0432 63.6663 23.8364V20.2545L55.2826 17.6826L66 12.3393L33 0ZM13.7273 22.4593L11.8728 33.5544C15.5718 34.0368 19.9967 36.1805 24.0644 38.7155C26.3778 40.1573 28.5446 41.7398 30.3045 43.2753C31.3802 44.2137 32.2797 45.1141 33 46C33.7203 45.114 34.6198 44.2137 35.6955 43.2753C37.4554 41.7398 39.6221 40.1573 41.9356 38.7155C46.0033 36.1805 50.4282 34.0368 54.1272 33.5544L52.2724 22.4593H51.3892L33 31.6272L14.6106 22.4593H13.7273Z"
                      fill="#6A97CF"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Qualification</span>
                    {!isActive ? (
                      <h4>
                        {userData.qualification == null
                          ? "Not Available"
                          : userData.qualification}
                      </h4>
                    ) : (
                      <input
                        value={qualification}
                        onChange={(e) => setQualification(e.target.value)}
                        defaultValue={userData.qualification}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
              </div>

              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 col-12 me-0">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="56"
                    height="48"
                    viewBox="0 0 56 48"
                    fill="none"
                  >
                    <path
                      d="M56 21.9993C56.0021 19.7026 55.4391 17.4406 54.3606 15.4128C53.2821 13.385 51.7213 11.6537 49.8157 10.3715C47.9101 9.08927 45.7183 8.29559 43.4336 8.0604C41.1489 7.82521 38.8413 8.15574 36.7145 9.02285C34.5877 9.88995 32.7068 11.267 31.2378 13.0326C29.7688 14.7981 28.7568 16.898 28.291 19.147C27.8251 21.396 27.9198 23.7251 28.5666 25.9289C29.2135 28.1327 30.3926 30.1435 32 31.784V45.9986C31.9998 46.3397 32.0867 46.6752 32.2527 46.9732C32.4187 47.2711 32.6581 47.5217 32.9482 47.7011C33.2383 47.8805 33.5695 47.9827 33.9102 47.998C34.251 48.0133 34.59 47.9412 34.895 47.7886L42 44.2337L49.105 47.7886C49.41 47.9412 49.749 48.0133 50.0898 47.998C50.4305 47.9827 50.7617 47.8805 51.0518 47.7011C51.3419 47.5217 51.5813 47.2711 51.7473 46.9732C51.9132 46.6752 52.0002 46.3397 52 45.9986V31.784C54.5651 29.1734 56.0017 25.6593 56 21.9993ZM42 11.9996C43.9778 11.9996 45.9112 12.5861 47.5557 13.6849C49.2002 14.7837 50.4819 16.3454 51.2388 18.1726C51.9957 19.9998 52.1937 22.0104 51.8078 23.9502C51.422 25.8899 50.4696 27.6717 49.0711 29.0702C47.6725 30.4687 45.8907 31.4211 43.9509 31.8069C42.0111 32.1927 40.0004 31.9947 38.1732 31.2379C36.3459 30.481 34.7841 29.1993 33.6853 27.5549C32.5865 25.9104 32 23.9771 32 21.9993C32 19.3473 33.0536 16.8038 34.9289 14.9285C36.8043 13.0532 39.3478 11.9996 42 11.9996ZM42.895 40.2088C42.6171 40.0698 42.3107 39.9974 42 39.9974C41.6893 39.9974 41.3829 40.0698 41.105 40.2088L36 42.7637V34.6465C37.8749 35.5369 39.9244 35.9989 42 35.9989C44.0756 35.9989 46.1251 35.5369 48 34.6465V42.7637L42.895 40.2088ZM28 37.9989C28 38.5293 27.7893 39.038 27.4142 39.413C27.0391 39.7881 26.5304 39.9988 26 39.9988H4C2.93913 39.9988 1.92172 39.5774 1.17157 38.8273C0.421427 38.0771 0 37.0598 0 35.9989V3.99988C0 2.93905 0.421427 1.92166 1.17157 1.17154C1.92172 0.421415 2.93913 0 4 0H48C49.0609 0 50.0783 0.421415 50.8284 1.17154C51.5786 1.92166 52 2.93905 52 3.99988C52 4.5303 51.7893 5.03899 51.4142 5.41405C51.0391 5.78911 50.5304 5.99982 50 5.99982C49.4696 5.99982 48.9609 5.78911 48.5858 5.41405C48.2107 5.03899 48 4.5303 48 3.99988H4V35.9989H26C26.5304 35.9989 27.0391 36.2096 27.4142 36.5847C27.7893 36.9598 28 37.4684 28 37.9989ZM24 23.9993C24 24.5297 23.7893 25.0384 23.4142 25.4135C23.0391 25.7885 22.5304 25.9992 22 25.9992H12C11.4696 25.9992 10.9609 25.7885 10.5858 25.4135C10.2107 25.0384 10 24.5297 10 23.9993C10 23.4689 10.2107 22.9602 10.5858 22.5851C10.9609 22.21 11.4696 21.9993 12 21.9993H22C22.5304 21.9993 23.0391 22.21 23.4142 22.5851C23.7893 22.9602 24 23.4689 24 23.9993ZM24 15.9995C24 16.5299 23.7893 17.0386 23.4142 17.4137C23.0391 17.7888 22.5304 17.9995 22 17.9995H12C11.4696 17.9995 10.9609 17.7888 10.5858 17.4137C10.2107 17.0386 10 16.5299 10 15.9995C10 15.4691 10.2107 14.9604 10.5858 14.5854C10.9609 14.2103 11.4696 13.9996 12 13.9996H22C22.5304 13.9996 23.0391 14.2103 23.4142 14.5854C23.7893 14.9604 24 15.4691 24 15.9995Z"
                      fill="#6A97CF"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Name on Certificate</span>
                    {!isActive ? (
                      <h4>
                        {userData.nameOnCertificate == null
                          ? "Not Available"
                          : userData.nameOnCertificate}
                      </h4>
                    ) : (
                      <input
                        value={nameOnCertificate}
                        onChange={(e) => setNameOnCertificate(e.target.value)}
                        defaultValue={userData.nameOnCertificate}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
              </div>

              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="54"
                    height="54"
                    viewBox="0 0 54 54"
                    fill="none"
                    className="form-icon"
                  >
                    <mask
                      id="path-1-outside-1_727_18145"
                      maskUnits="userSpaceOnUse"
                      x="0"
                      y="0"
                      width="54"
                      height="54"
                      fill="black"
                    >
                      <rect fill="white" width="54" height="54" />
                      <path d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z" />
                    </mask>
                    <path
                      d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z"
                      fill="#6A97CF"
                    />
                    <path
                      d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z"
                      stroke="#6A97CF"
                      strokeWidth="0.4"
                      mask="url(#path-1-outside-1_727_18145)"
                    />
                  </svg>

                  <div className="user-form-data pe-2">
                    <span>GST Number</span>
                    {!isActive ? (
                      <h4>
                        {userData.gstNumber == null
                          ? "Not Available"
                          : userData.gstNumber}
                      </h4>
                    ) : (
                      <input
                        value={gstNumber}
                        onChange={(e) => setGstNumber(e.target.value)}
                        defaultValue={userData.gstNumber}
                        maxLength={15}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
                <div className="user-form-field card-shadow my-3 me-0 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="54"
                    height="54"
                    viewBox="0 0 54 54"
                    fill="none"
                    className="form-icon"
                  >
                    <mask
                      id="path-1-outside-1_727_18145"
                      maskUnits="userSpaceOnUse"
                      x="0"
                      y="0"
                      width="54"
                      height="54"
                      fill="black"
                    >
                      <rect fill="white" width="54" height="54" />
                      <path d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z" />
                    </mask>
                    <path
                      d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z"
                      fill="#6A97CF"
                    />
                    <path
                      d="M16.1667 31.3333C16.1667 31.908 15.9384 32.4591 15.5321 32.8654C15.1257 33.2717 14.5746 33.5 14 33.5H11.8333C11.2587 33.5 10.7076 33.2717 10.3013 32.8654C9.89494 32.4591 9.66667 31.908 9.66667 31.3333C9.66667 30.7587 9.89494 30.2076 10.3013 29.8013C10.7076 29.3949 11.2587 29.1667 11.8333 29.1667H14C14.5746 29.1667 15.1257 29.3949 15.5321 29.8013C15.9384 30.2076 16.1667 30.7587 16.1667 31.3333ZM24.8333 29.1667H22.6667C22.092 29.1667 21.5409 29.3949 21.1346 29.8013C20.7283 30.2076 20.5 30.7587 20.5 31.3333C20.5 31.908 20.7283 32.4591 21.1346 32.8654C21.5409 33.2717 22.092 33.5 22.6667 33.5H24.8333C25.408 33.5 25.9591 33.2717 26.3654 32.8654C26.7717 32.4591 27 31.908 27 31.3333C27 30.7587 26.7717 30.2076 26.3654 29.8013C25.9591 29.3949 25.408 29.1667 24.8333 29.1667ZM14 37.8333H11.8333C11.2587 37.8333 10.7076 38.0616 10.3013 38.4679C9.89494 38.8743 9.66667 39.4254 9.66667 40C9.66667 40.5746 9.89494 41.1257 10.3013 41.5321C10.7076 41.9384 11.2587 42.1667 11.8333 42.1667H14C14.5746 42.1667 15.1257 41.9384 15.5321 41.5321C15.9384 41.1257 16.1667 40.5746 16.1667 40C16.1667 39.4254 15.9384 38.8743 15.5321 38.4679C15.1257 38.0616 14.5746 37.8333 14 37.8333ZM24.8333 37.8333H22.6667C22.092 37.8333 21.5409 38.0616 21.1346 38.4679C20.7283 38.8743 20.5 39.4254 20.5 40C20.5 40.5746 20.7283 41.1257 21.1346 41.5321C21.5409 41.9384 22.092 42.1667 22.6667 42.1667H24.8333C25.408 42.1667 25.9591 41.9384 26.3654 41.5321C26.7717 41.1257 27 40.5746 27 40C27 39.4254 26.7717 38.8743 26.3654 38.4679C25.9591 38.0616 25.408 37.8333 24.8333 37.8333ZM14 11.8333H11.8333C11.2587 11.8333 10.7076 12.0616 10.3013 12.4679C9.89494 12.8743 9.66667 13.4254 9.66667 14C9.66667 14.5746 9.89494 15.1257 10.3013 15.5321C10.7076 15.9384 11.2587 16.1667 11.8333 16.1667H14C14.5746 16.1667 15.1257 15.9384 15.5321 15.5321C15.9384 15.1257 16.1667 14.5746 16.1667 14C16.1667 13.4254 15.9384 12.8743 15.5321 12.4679C15.1257 12.0616 14.5746 11.8333 14 11.8333ZM24.8333 11.8333H22.6667C22.092 11.8333 21.5409 12.0616 21.1346 12.4679C20.7283 12.8743 20.5 13.4254 20.5 14C20.5 14.5746 20.7283 15.1257 21.1346 15.5321C21.5409 15.9384 22.092 16.1667 22.6667 16.1667H24.8333C25.408 16.1667 25.9591 15.9384 26.3654 15.5321C26.7717 15.1257 27 14.5746 27 14C27 13.4254 26.7717 12.8743 26.3654 12.4679C25.9591 12.0616 25.408 11.8333 24.8333 11.8333ZM14 20.5H11.8333C11.2587 20.5 10.7076 20.7283 10.3013 21.1346C9.89494 21.5409 9.66667 22.092 9.66667 22.6667C9.66667 23.2413 9.89494 23.7924 10.3013 24.1987C10.7076 24.6051 11.2587 24.8333 11.8333 24.8333H14C14.5746 24.8333 15.1257 24.6051 15.5321 24.1987C15.9384 23.7924 16.1667 23.2413 16.1667 22.6667C16.1667 22.092 15.9384 21.5409 15.5321 21.1346C15.1257 20.7283 14.5746 20.5 14 20.5ZM24.8333 20.5H22.6667C22.092 20.5 21.5409 20.7283 21.1346 21.1346C20.7283 21.5409 20.5 22.092 20.5 22.6667C20.5 23.2413 20.7283 23.7924 21.1346 24.1987C21.5409 24.6051 22.092 24.8333 22.6667 24.8333H24.8333C25.408 24.8333 25.9591 24.6051 26.3654 24.1987C26.7717 23.7924 27 23.2413 27 22.6667C27 22.092 26.7717 21.5409 26.3654 21.1346C25.9591 20.7283 25.408 20.5 24.8333 20.5ZM53 22.6667V42.1667C52.9966 45.0388 51.8541 47.7923 49.8232 49.8232C47.7923 51.8541 45.0388 52.9966 42.1667 53H11.8333C8.96121 52.9966 6.20771 51.8541 4.17681 49.8232C2.14591 47.7923 1.00344 45.0388 1 42.1667L1 11.8333C1.00344 8.96121 2.14591 6.20771 4.17681 4.17681C6.20771 2.14591 8.96121 1.00344 11.8333 1L24.8333 1C27.7055 1.00344 30.459 2.14591 32.4899 4.17681C34.5208 6.20771 35.6632 8.96121 35.6667 11.8333H42.1667C45.0388 11.8368 47.7923 12.9792 49.8232 15.0101C51.8541 17.041 52.9966 19.7945 53 22.6667ZM11.8333 48.6667H31.3333V11.8333C31.3333 10.1094 30.6485 8.45613 29.4295 7.23714C28.2105 6.01815 26.5572 5.33333 24.8333 5.33333H11.8333C10.1094 5.33333 8.45613 6.01815 7.23714 7.23714C6.01815 8.45613 5.33333 10.1094 5.33333 11.8333V42.1667C5.33333 43.8906 6.01815 45.5439 7.23714 46.7629C8.45613 47.9818 10.1094 48.6667 11.8333 48.6667ZM48.6667 22.6667C48.6667 20.9428 47.9818 19.2895 46.7629 18.0705C45.5439 16.8515 43.8906 16.1667 42.1667 16.1667H35.6667V48.6667H42.1667C43.8906 48.6667 45.5439 47.9818 46.7629 46.7629C47.9818 45.5439 48.6667 43.8906 48.6667 42.1667V22.6667ZM42.1667 29.1667C41.7381 29.1667 41.3192 29.2937 40.9629 29.5318C40.6066 29.7699 40.3289 30.1083 40.1649 30.5042C40.0009 30.9001 39.958 31.3357 40.0416 31.756C40.1252 32.1763 40.3316 32.5624 40.6346 32.8654C40.9376 33.1684 41.3237 33.3748 41.744 33.4584C42.1643 33.542 42.5999 33.4991 42.9958 33.3351C43.3917 33.1711 43.7301 32.8934 43.9682 32.5371C44.2063 32.1808 44.3333 31.7619 44.3333 31.3333C44.3333 30.7587 44.1051 30.2076 43.6987 29.8013C43.2924 29.3949 42.7413 29.1667 42.1667 29.1667ZM42.1667 37.8333C41.7381 37.8333 41.3192 37.9604 40.9629 38.1985C40.6066 38.4366 40.3289 38.7749 40.1649 39.1709C40.0009 39.5668 39.958 40.0024 40.0416 40.4227C40.1252 40.843 40.3316 41.2291 40.6346 41.5321C40.9376 41.8351 41.3237 42.0414 41.744 42.125C42.1643 42.2086 42.5999 42.1657 42.9958 42.0017C43.3917 41.8377 43.7301 41.56 43.9682 41.2037C44.2063 40.8474 44.3333 40.4285 44.3333 40C44.3333 39.4254 44.1051 38.8743 43.6987 38.4679C43.2924 38.0616 42.7413 37.8333 42.1667 37.8333ZM42.1667 20.5C41.7381 20.5 41.3192 20.6271 40.9629 20.8652C40.6066 21.1032 40.3289 21.4416 40.1649 21.8375C40.0009 22.2334 39.958 22.6691 40.0416 23.0894C40.1252 23.5097 40.3316 23.8957 40.6346 24.1987C40.9376 24.5017 41.3237 24.7081 41.744 24.7917C42.1643 24.8753 42.5999 24.8324 42.9958 24.6684C43.3917 24.5044 43.7301 24.2267 43.9682 23.8704C44.2063 23.5141 44.3333 23.0952 44.3333 22.6667C44.3333 22.092 44.1051 21.5409 43.6987 21.1346C43.2924 20.7283 42.7413 20.5 42.1667 20.5Z"
                      stroke="#6A97CF"
                      strokeWidth="0.4"
                      mask="url(#path-1-outside-1_727_18145)"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>GST Company Name</span>
                    {!isActive ? (
                      <h4>
                        {userData.gstCompanyName == null
                          ? "Not Available"
                          : userData.gstCompanyName}
                      </h4>
                    ) : (
                      <input
                        value={gstCompanyName}
                        onChange={(e) => setGstCompanyName(e.target.value)}
                        defaultValue={userData.gstCompanyName}
                        type="text"
                        className={`form-control ${isActive ? "" : "d-none"}`}
                      />
                    )}
                  </div>
                </div>
              </div>

              <div className="row justify-content-between">
                <div className="user-form-field card-shadow my-3 me-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="35"
                    height="49"
                    viewBox="0 0 35 49"
                    fill="none"
                  >
                    <path
                      d="M3.18182 0H35L31.8182 5.44444H21.4455C22.9727 7.02333 24.1182 8.87444 24.7864 10.8889H35L31.8182 16.3333H25.4545C25.0602 19.7273 23.3372 22.9077 20.5649 25.3586C17.7926 27.8095 14.1337 29.3871 10.1818 29.8356V29.9444H7.95455L27.0455 49H19.0909L0 29.9444V24.5H7.95455C13.5545 24.5 18.2 20.9611 18.9636 16.3333H0L3.18182 10.8889H18.0091C16.2273 7.67667 12.4091 5.44444 7.95455 5.44444H0L3.18182 0Z"
                      fill="#6A97CF"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Total Paid</span>
                    <h4>{userData?.totalPaid}</h4>
                  </div>
                </div>
                {userData?.balance <= 0 ||
                  userData?.balance === null ||
                  userData?.balance === undefined ||
                  !userData?.balance ? (
                  <>
                    <div className="user-form-field card-shadow my-3 me-3 col">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="35"
                        height="49"
                        viewBox="0 0 35 49"
                        fill="none"
                      >
                        <path
                          d="M3.18182 0H35L31.8182 5.44444H21.4455C22.9727 7.02333 24.1182 8.87444 24.7864 10.8889H35L31.8182 16.3333H25.4545C25.0602 19.7273 23.3372 22.9077 20.5649 25.3586C17.7926 27.8095 14.1337 29.3871 10.1818 29.8356V29.9444H7.95455L27.0455 49H19.0909L0 29.9444V24.5H7.95455C13.5545 24.5 18.2 20.9611 18.9636 16.3333H0L3.18182 10.8889H18.0091C16.2273 7.67667 12.4091 5.44444 7.95455 5.44444H0L3.18182 0Z"
                          fill="#6A97CF"
                        />
                      </svg>

                      <div className="user-form-data">
                        <span>Balance</span>
                        <h4>{userData?.balance}</h4>
                      </div>
                    </div>
                  </>
                ) : (
                  <>
                    <div
                      // onClick={() => setShowPaymentModal(true)}
                      className="user-form-field card-shadow my-3 me-3 col"
                    // title="Click Here To Pay Balance Amount"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="35"
                        height="49"
                        viewBox="0 0 35 49"
                        fill="none"
                      >
                        <path
                          d="M3.18182 0H35L31.8182 5.44444H21.4455C22.9727 7.02333 24.1182 8.87444 24.7864 10.8889H35L31.8182 16.3333H25.4545C25.0602 19.7273 23.3372 22.9077 20.5649 25.3586C17.7926 27.8095 14.1337 29.3871 10.1818 29.8356V29.9444H7.95455L27.0455 49H19.0909L0 29.9444V24.5H7.95455C13.5545 24.5 18.2 20.9611 18.9636 16.3333H0L3.18182 10.8889H18.0091C16.2273 7.67667 12.4091 5.44444 7.95455 5.44444H0L3.18182 0Z"
                          fill="#6A97CF"
                        />
                      </svg>

                      <div className="user-form-data">
                        <span>Balance</span>
                        <h4>{userData?.balance}</h4>
                      </div>
                    </div>
                  </>
                )}
                <div className="user-form-field card-shadow my-3 col">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="35"
                    height="49"
                    viewBox="0 0 35 49"
                    fill="none"
                  >
                    <path
                      d="M3.18182 0H35L31.8182 5.44444H21.4455C22.9727 7.02333 24.1182 8.87444 24.7864 10.8889H35L31.8182 16.3333H25.4545C25.0602 19.7273 23.3372 22.9077 20.5649 25.3586C17.7926 27.8095 14.1337 29.3871 10.1818 29.8356V29.9444H7.95455L27.0455 49H19.0909L0 29.9444V24.5H7.95455C13.5545 24.5 18.2 20.9611 18.9636 16.3333H0L3.18182 10.8889H18.0091C16.2273 7.67667 12.4091 5.44444 7.95455 5.44444H0L3.18182 0Z"
                      fill="#6A97CF"
                    />
                  </svg>

                  <div className="user-form-data">
                    <span>Total Payable</span>
                    <h4>{userData?.totalPayable}</h4>
                  </div>
                </div>
              </div>
              {/* </form> */}
            </div>
          </div>
        </div>
      </section>

      <Modal
        show={showPaymentModal}
        onHide={() => setShowPaymentModal(false)}
        className="payment-modal"
        centered
      >
        <Modal.Header className="p-4" closeButton>
          <Modal.Title>Pay Balance</Modal.Title>
        </Modal.Header>
        <Modal.Body className="user-select-none p-4">
          <form onSubmit={(e) => handlePayBalance(e)}>
            <div className="d-flex mb-3 me-3 col">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="35"
                height="49"
                viewBox="0 0 35 49"
                fill="none"
              >
                <path
                  d="M3.18182 0H35L31.8182 5.44444H21.4455C22.9727 7.02333 24.1182 8.87444 24.7864 10.8889H35L31.8182 16.3333H25.4545C25.0602 19.7273 23.3372 22.9077 20.5649 25.3586C17.7926 27.8095 14.1337 29.3871 10.1818 29.8356V29.9444H7.95455L27.0455 49H19.0909L0 29.9444V24.5H7.95455C13.5545 24.5 18.2 20.9611 18.9636 16.3333H0L3.18182 10.8889H18.0091C16.2273 7.67667 12.4091 5.44444 7.95455 5.44444H0L3.18182 0Z"
                  fill="#6A97CF"
                />
              </svg>

              <div className="user-form-data">
                <span>Balance</span>
                <h4>{userData?.balance}</h4>
              </div>
            </div>
            <input
              // value={balance}
              onChange={(e) => setBalance(e.target.value)}
              type="number"
              min="0"
              // max={userData?.balance}
              name="balance"
              id="balance"
              className="form-control"
              placeholder="Enter Amount To Proceed"
              required
            />
            {isError !== "" && <span className='error'>{isError}</span>}
            <div className="d-flex align-items-center justify-content-end">
              {/* <button
                className="btn btn-outline-secondary mt-4 me-2"
                onClick={() => setShowPaymentModal(false)}
              >
                Close
              </button> */}
              <button className="btn btn-outline-primary mt-4" type="submit">
                Pay Now
              </button>
            </div>
          </form>
        </Modal.Body>
      </Modal>

      <Modal
        show={showSuccessModal}
        onHide={() => setShowSuccessModal(false)}
        backdrop="static"
        keyboard={false}
        className="payment-modal"
        centered
      >
        <Modal.Body className="p-0 user-select-none">
          <div className="success-block w-100">
            <div className="exam-success1-tick-block">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="93"
                height="93"
                viewBox="0 0 93 93"
                fill="none"
              >
                <g clipPath="url(#clip0_727_17414)">
                  <path
                    d="M46.5 93C72.1812 93 93 72.1812 93 46.5C93 20.8188 72.1812 0 46.5 0C20.8188 0 0 20.8188 0 46.5C0 72.1812 20.8188 93 46.5 93Z"
                    fill="#6487C9"
                  />
                  <path
                    d="M34.6172 67.4763L58.5273 91.3864C78.3301 86.1056 92.9989 68.063 92.9989 46.4999C92.9989 46.0599 92.9989 45.6198 92.9989 45.1798L74.2229 27.8706L34.6172 67.4763Z"
                    fill="#466EB6"
                  />
                  <path
                    d="M47.6724 56.9149C49.726 58.9685 49.726 62.489 47.6724 64.5427L43.4184 68.7966C41.3648 70.8502 37.8443 70.8502 35.7907 68.7966L17.1613 50.0206C15.1077 47.9669 15.1077 44.4464 17.1613 42.3928L21.4153 38.1389C23.4689 36.0852 26.9894 36.0852 29.043 38.1389L47.6724 56.9149Z"
                    fill="white"
                  />
                  <path
                    d="M63.956 24.4969C66.0097 22.4433 69.5302 22.4433 71.5838 24.4969L75.8377 28.7508C77.8914 30.8045 77.8914 34.325 75.8377 36.3786L43.5665 68.5032C41.5128 70.5568 37.9923 70.5568 35.9387 68.5032L31.6848 64.2492C29.6311 62.1956 29.6311 58.6751 31.6848 56.6215L63.956 24.4969Z"
                    fill="white"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_727_17414">
                    <rect width="93" height="93" fill="white" />
                  </clipPath>
                </defs>
              </svg>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="53"
                height="25"
                viewBox="0 5 53 25"
                fill="none"
                className="blue-triangle"
              >
                <path
                  d="M24.6814 23.6119C25.7559 24.4317 27.2459 24.4317 28.3205 23.6119L51.0863 6.24485C53.3686 4.50375 52.1373 0.859646 49.2667 0.859646H3.73516C0.864535 0.859646 -0.36674 4.50374 1.9156 6.24484L24.6814 23.6119Z"
                  fill="#DDEEFD"
                />
              </svg>
            </div>
            <div className="exam-success-text-block">
              <div className="exam-course-title">
                Your Payment of has been Successfully Completed...!
              </div>

              {/* <div className="exam-text mt-3 text-center">
                Congratulations You have scored{" "}
                {result ? (
                  <>
                    <Link className="d-block">"{result?.examMarks}" Marks</Link>
                  </>
                ) : (
                  <>
                    <Link className="d-block">Loading ...</Link>
                  </>
                )}
                & your certificate is now available
              </div> */}

              <div className="btn-list text-center mt-5">
                <a
                  className="btn support-btn"
                  onClick={() => setShowSuccessModal(false)}
                >
                  Close
                </a>
              </div>
            </div>
          </div>
        </Modal.Body>
      </Modal>

      <Modal
        show={showFailureModal}
        className="payment-modal"
        onHide={() => setShowFailureModal(false)}
        centered
      >
        <Modal.Body className="p-0 user-select-none">
          <div className="success-block w-100">
            <div className="exam-success-tick-block red-bg">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="147"
                height="146"
                viewBox="0 0 147 146"
                fill="none"
              >
                <path
                  d="M125.467 145.699H21.4348C5.52115 145.699 -4.82914 129.083 2.28758 114.961L54.3033 11.7412C62.1924 -3.91374 84.7086 -3.91374 92.5977 11.7412L144.613 114.96C151.731 129.083 141.38 145.699 125.467 145.699Z"
                  fill="url(#paint0_linear_727_20114)"
                />
                <path
                  d="M125.467 145.699H21.4348C5.52115 145.699 -4.82914 129.083 2.28758 114.961L54.3033 11.7412C62.1924 -3.91374 84.7086 -3.91374 92.5977 11.7412L144.613 114.96C151.731 129.083 141.38 145.699 125.467 145.699Z"
                  fill="#EC654D"
                />
                <path
                  d="M126.04 145.7H112.84L68.2913 122.781C66.8914 122.1 65.8163 118.688 64.9913 116.232C64.9913 109.893 63.8656 83.9226 63.3414 69.5757C62.8172 55.2317 61.6914 52.1771 61.6914 45.8382C63.3414 39.2899 68.2913 40.927 68.2913 40.1085C69.9412 40.1084 71.8791 39.3091 74.0855 39.3091C76.2919 39.3091 81.6714 39.2899 83.9659 42.564C84.1647 42.7812 121.039 84.2648 135.94 99.043L144.189 114.595C152.439 129.329 140.89 145.7 126.04 145.7Z"
                  fill="#EB4335"
                />
                <path
                  d="M113.898 145.698H92.4734L67.9121 121.329C66.2789 119.9 65.4609 118.234 65.4609 116.327C65.4609 114.341 66.2789 112.652 67.9121 111.263C69.5452 109.874 71.5298 109.18 73.8631 109.18C75.9168 109.18 77.694 109.874 79.1917 111.263L113.898 145.698Z"
                  fill="#EB4335"
                />
                <path
                  d="M61.8477 45.7517C61.8477 43.6891 63.0015 42.0959 65.3107 40.9736C67.6189 39.8513 70.6084 39.2896 74.2792 39.2896C77.9499 39.2896 80.6467 39.8739 82.3663 41.0415C84.0854 42.2091 84.9471 43.7788 84.9471 45.7517C84.9471 52.2165 84.7628 55.2194 84.4024 69.8493C84.0382 84.4797 83.8582 89.0898 83.8582 95.5519C83.8582 96.9004 82.8198 97.9559 80.746 98.7177C78.6688 99.4797 76.5134 99.8612 74.2796 99.8612C67.7359 99.8612 64.4633 98.4259 64.4633 95.5519C64.4633 89.0898 64.027 84.4797 63.1557 69.8493C62.283 55.2191 61.8477 52.2162 61.8477 45.7517Z"
                  fill="white"
                />
                <circle cx="73.3943" cy="120.151" r="8.24981" fill="white" />
                <defs>
                  <linearGradient
                    id="paint0_linear_727_20114"
                    x1="36.8434"
                    y1="62.3159"
                    x2="203.104"
                    y2="229.885"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stopColor="#FFB92D" />
                    <stop offset="1" stopColor="#F59500" />
                  </linearGradient>
                </defs>
              </svg>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="80"
                height="38"
                className="blue-triangle"
                viewBox="0 0 80 38"
                fill="none"
              >
                <path
                  d="M38.0229 37.1732C39.1548 38.166 40.8473 38.166 41.9792 37.1732L78.1604 5.43969C80.2417 3.61427 78.9506 0.184277 76.1822 0.184277H3.8199C1.05154 0.184277 -0.239513 3.61427 1.84175 5.43969L38.0229 37.1732Z"
                  fill="#FFCDC5"
                />
              </svg>
            </div>
            <div className="exam-success-text-block">
              <div className="exam-course-title">
                Your Payment has been Unsuccessful...!
              </div>

              {/* <div className="exam-text mt-3 text-center">
                If you click the button below your exam will end and you will
                get certificate based on answers you have appeared till now...!
              </div> */}

              <div className="btn-list text-center mt-5">
                <Link
                  className="end-btn"
                  onClick={() => setShowFailureModal(false)}
                >
                  Close
                </Link>
                <Link
                  className="end-btn ms-2"
                  onClick={(e) => handlePayBalance(e)}
                >
                  Retry Payment
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="15"
                    height="14"
                    viewBox="0 0 15 14"
                    fill="none"
                    className="ms-2"
                  >
                    <path
                      d="M8.70071 13.6584C8.60108 13.5501 8.52205 13.4214 8.46813 13.2798C8.4142 13.1382 8.38645 12.9864 8.38645 12.833C8.38645 12.6797 8.4142 12.5279 8.46813 12.3863C8.52205 12.2447 8.60108 12.116 8.70071 12.0077L12.2281 8.16599L1.07152 8.15782C0.787333 8.15782 0.514787 8.03491 0.313839 7.81613C0.11289 7.59734 0 7.30061 0 6.9912C0 6.6818 0.11289 6.38506 0.313839 6.16628C0.514787 5.94749 0.787333 5.82458 1.07152 5.82458L12.2303 5.83275L8.70071 1.99224C8.49965 1.77349 8.38664 1.47674 8.38654 1.16727C8.38644 0.857799 8.49926 0.560961 8.70017 0.342056C8.90109 0.12315 9.17365 0.000109468 9.45789 7.30087e-08C9.74213 -0.000109322 10.0148 0.122722 10.2158 0.341473L14.0583 4.52497C14.3568 4.84997 14.5937 5.23582 14.7553 5.66048C14.9168 6.08514 15 6.54029 15 6.99995C15 7.45961 14.9168 7.91476 14.7553 8.33943C14.5937 8.76409 14.3568 9.14993 14.0583 9.47493L10.2158 13.6584C10.0149 13.8771 9.7424 14 9.45827 14C9.17414 14 8.90165 13.8771 8.70071 13.6584Z"
                      fill="white"
                    />
                  </svg>
                </Link>
              </div>
            </div>
          </div>
        </Modal.Body>
      </Modal>
    </>
  );
};

export default MyProfile;
